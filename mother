#!/usr/bin/python
# -*- coding: utf8 -*-
__version__ = "$Revision$ $Date$"
__author__  = "Guillaume Bour <guillaume@bour.cc>"
__license__ = """
    Mother, Application Server
    Copyright (C) 2010, Guillaume Bour <guillaume@bour.cc>

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA..
"""

import sys, os, os.path, sqlite3, traceback
from optparse import OptionParser
import config

from twisted.internet       import reactor
from twisted.web            import server
from twisted.web.resource   import Resource

from mother                 import Mother


# default settings
defaults = {
    'conffile'      : '/etc/mother.cfg',
    'plugdir'       : '/var/lib/mother/plugins',
    'database'      : '/var/lib/mother/mother.db',
    'port'          : 9998,
    'logfile'       : '/var/log/mother.log',
    'loglevel'      : 'error',
}

if __name__ == '__main__':
    # 1. parse options
    parser = OptionParser()
    parser.add_option('-c', '--config-file', dest='conffile',
        default=defaults['conffile'],
        help='configuration file')
    parser.add_option('-u', '--plugin-dir' , dest='plugdir',
        default=defaults['plugdir'],
        help='plugins directory')
    parser.add_option('-d', '--database'   , dest='database',
        default=defaults['database'],
        help='database URI')
    parser.add_option('-p', '--port'       , dest='port',
        default=defaults['port'],
        help='listening port')
    parser.add_option('-f', '--log-file'    , dest='logfile',
        default=defaults['logfile'],
        help='application log file')
    parser.add_option('-l', '--log-level'   , dest='loglevel',
        default=defaults['loglevel'],
        help='application log level')
    parser.add_option('--plugins'          , dest='plugins',
        default=None,
        help='list of plugins to activate')
        
    parser.add_option('--plugins-list'     , dest='list',
        action='store_true', default=False,
        help='list available plugins')
    parser.add_option('--status'           , dest='status', 
        action='store_true', default=False,
        help='list available plugins')
        
    (options, args) = parser.parse_args()

    # 2. load config
    if not os.path.isfile(options.conffile):
        print "%s configuration file is not found." % options.conffile
        sys.exit(1)
    cfg = config.Config(options.conffile)
        
    for opt in parser.option_list:
        if opt.dest is None:
            continue
        
        if not hasattr(cfg, opt.dest) or getattr(options, opt.dest) != opt.default:
            setattr(cfg, opt.dest, getattr(options, opt.dest))
        
    if options.status:
        print "status"
        sys.exit(1)

    try:
        mom = Mother(cfg)
    except Exception, e:
        print e
        sys.exit(1)
        
    if options.list:
        print "Plugins:"
        for plug in mom.list_plugins():
            print " . %s" % plug
        sys.exit(0)
        
    mom.run()
    

